variables:
    PROJECT_NAME: "Host/BackendAPI"
    BUILD_IMAGE: "mcr.microsoft.com/dotnet/core/sdk:3.1"
    RUNTIME_IMAGE: "mcr.microsoft.com/dotnet/core/aspnet:3.1.1-alpine3.10"

stages:
  - build
  # - test
  - docker

build:
  stage: build
  image: $BUILD_IMAGE
  only:
    - master
  script:
    - cd $PROJECT_NAME
    - dotnet restore --interactive
    - dotnet build --configuration Release
    - dotnet publish --configuration Release --output ../../publish/
  artifacts:
    paths:
      - ./publish/*
    expire_in: 1 week
  tags:
  - docker
  
# test:
#   stage: test
#   image: $BUILD_IMAGE
#   only:
#     - master
#   script:
#     - cd src/$PROJECT_NAME.UnitTest
#     - dotnet test --test-adapter-path:. --logger:"junit;LogFilePath=../../UnitTestResult.xml"
#   artifacts:
#     paths:
#       - ./UnitTestResult.xml
#     reports:
#       junit: ./UnitTestResult.xml
#   tags:
#   - docker

docker:
  stage: docker
  image: docker:stable
  services:
    - docker:18.09.7-dind
  variables:
    DOCKER_DRIVER: overlay2
    DOCKER_TLS_CERTDIR: ""
  only:
    - master
  script:
    # Prepare Dockerfile
    - sed -i "s~\$DOCKERIMAGE~$RUNTIME_IMAGE~g" Dockerfile
    - sed -i 's/$ENVIRONMENT/Staging/g' Dockerfile
    - sed -i "s/\$ENTRYPOINT/$PROJECT_NAME.dll/g" Dockerfile

    # Process Dockerfile
    - docker login -u "gitlab-ci-token" -p "$CI_JOB_TOKEN" $CI_REGISTRY
    - docker build --tag "$CI_REGISTRY_IMAGE:$CI_COMMIT_SHORT_SHA" --tag "$CI_REGISTRY_IMAGE:latest" .
    - docker push "$CI_REGISTRY_IMAGE:$CI_COMMIT_SHORT_SHA"
    - docker push "$CI_REGISTRY_IMAGE:latest"
  tags:
  - docker
